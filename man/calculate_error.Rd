% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/errors.R
\name{calculate_error}
\alias{calculate_error}
\title{Calculates error values based on the differences between two vectors containing real and predicted values}
\usage{
calculate_error(real, predicted, type = "Absolute")
}
\arguments{
\item{real}{A vector that contains the real values of the property of interest.}

\item{predicted}{A vector that contains the predicted values by the model.}

\item{type}{A string that contains the type of error to be calculated. It can be "absolute", "residual" or "logarithmic".}
}
\value{
A vector composed of the errors calculated from the differences between real and predicted values.
}
\description{
This function calculates the error of a model based on receiving a vector with the predicted values and the real values.
It also considers the type of error that is being calculated, with three possible options: absolute, residual and logarithmic.
Note that this functions is a variation of function from \href{https://github.com/inesareosa/MScThesis}{Error Dependence Plots}.
}
\examples{
calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2))
# returns c(1,2,1,1,1,3)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="Absolute")
# returns c(1,2,1,1,1,3)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="absolute")
# returns c(1,2,1,1,1,3)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="AbSoLuTe")
# returns c(1,2,1,1,1,3)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="Logarithmic")
# returns c(0.6931472,1.0986123,0.6931472,0.6931472,0.6931472,1.3862944)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="logarithmic")
# returns c(0.6931472,1.0986123,0.6931472,0.6931472,0.6931472,1.3862944)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="lOgARITHmic")
# returns c(0.6931472,1.0986123,0.6931472,0.6931472,0.6931472,1.3862944)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="Residual")
# returns c(1,2,1,1,-1,3)

calculate_error(c(1,2,3,4,5,5), c(0,0,2,3,6,2), type="ResiDual")
# returns c(1,2,1,1,-1,3)
}
\seealso{
[single_model_data()] to understand how this function is used in the context of altering a data frame.
}
